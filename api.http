## valid uuid = b8ee6449-b662-4245-9f12-430dfb74df6c

### 
# @name createCategory
POST http://localhost:3000/categories
Content-Type: application/json

{
    "name": "Category 1",
    "description": "Description 1"
}

###

@categoryId = {{createCategory.response.body.data.id}}

###
GET http://localhost:3000/categories

###
GET http://localhost:3000/categories/8f4b7b9c-3f7a-4b6c-8b0c-1c9c5b8b9b6a


### 
# @name createGenre
POST http://localhost:3000/genres
Content-Type: application/json

{
    "name": "Genre 1",
    "categories_id": [
        "{{categoryId}}"
    ]
}

###

@genreId = {{createGenre.response.body.data.id}}

###

# @name createCastMember
POST http://localhost:3000/cast-members
Content-Type: application/json

{
    "name": "Cast Member 1",
    "type": 1
}

###

@castMemberId = {{createCastMember.response.body.data.id}}


###
# @name createVideo
POST http://localhost:3000/videos
Content-Type: application/json

{
    "title": "Video 1",
    "description": "Description 1",
    "year_launched": 2020,
    "is_opened": false,
    "rating": "L",
    "duration": 90,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}

###

@videoId = {{createVideo.response.body.data.id}}

###

GET http://localhost:3000/videos/{{videoId}}

###
# @name updateVideo
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: application/json

{
    "title": "A volta dos que não foram",
    "description": "Description A volta dos que não foram - parte 1",
    "year_launched": 2022,
    "is_opened": true,
    "rating": "L",
    "duration": 90,
    "categories_id": [
        "{{categoryId}}"
    ],
    "genres_id": [
        "{{genreId}}"
    ],
    "cast_members_id": [
        "{{castMemberId}}"
    ]
}

###
# @name uploadVideo
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
------WebKitFormBoundary1234--

###
# @name uploadVideoWithFileAndDataTogetherError
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
------WebKitFormBoundary1234
Content-Disposition: form-data; name="title"
Content-Type: text/plain

Video teste
------WebKitFormBoundary1234--

###
# @name uploadVideoOnlyOneFileError
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="banner"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
------WebKitFormBoundary1234--

###
# @name uploadSpecializedEndpoint
PATCH http://localhost:3000/videos/{{videoId}}/upload
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json

------WebKitFormBoundary1234--

###
GET http://localhost:3000/fake-event

###
GET http://localhost:3000/rabbitmq-fake

###

### Estou usando host.docker.internal, porque no momento o dev container com rest client está fazendo requisição de dentro do container, 
### então por localhost:8080 não funciona, mas se estiver usando o rest client fora do container, pode usar localhost:8080
POST http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=admin@user.com
&password=secret
&grant_type=password
&client_id=codeflix-admin-frontend

### configuração do openid connect server
GET http://host.docker.internal:8080/realms/codeflix/.well-known/openid-configuration

### certificados
GET http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/certs

### Esse é um teste que fizemos para estudar como gerar token
POST http://localhost:3000/auth
Content-Type: application/json

{
    "email": "user@userland.com",
    "password": "12345678"
}

### Aqui estamos usando token gerado acima
GET http://localhost:3000/auth
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI5NUpPV0M0SXNERU5MMUUtb2NfMkhHUFlCUWIxQTdDNkxZUE04SjB0bldNIn0.eyJleHAiOjE3MDU5NzEyMDksImlhdCI6MTcwNTk3MDkwOSwianRpIjoiMjIyY2NjOWQtNjQ0YS00ZjkzLTkxNzUtOTgxZjllN2MzY2I0IiwiaXNzIjoiaHR0cDovL2hvc3QuZG9ja2VyLmludGVybmFsOjgwODAvcmVhbG1zL2NvZGVmbGl4IiwiYXVkIjoiYWNjb3VudCIsInN1YiI6ImVkOTg5OTVlLWVhNTUtNDQ4ZS04ZTVkLWY3ZjlhYzk4MjQ1ZiIsInR5cCI6IkJlYXJlciIsImF6cCI6ImNvZGVmbGl4LWFkbWluLWZyb250ZW5kIiwic2Vzc2lvbl9zdGF0ZSI6ImMxMWUyNjMwLTJlYzAtNGVmNy1hZjZmLWY4NWM1Yjc5NzgyNSIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiLyoiXSwicmVhbG1fYWNjZXNzIjp7InJvbGVzIjpbIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iLCJkZWZhdWx0LXJvbGVzLWNvZGVmbGl4Il19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJwcm9maWxlIGVtYWlsIiwic2lkIjoiYzExZTI2MzAtMmVjMC00ZWY3LWFmNmYtZjg1YzViNzk3ODI1IiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJBZG1pbiBBZG1pbiIsInByZWZlcnJlZF91c2VybmFtZSI6ImFkbWluQHVzZXIuY29tIiwiZ2l2ZW5fbmFtZSI6IkFkbWluIiwiZmFtaWx5X25hbWUiOiJBZG1pbiIsImVtYWlsIjoiYWRtaW5AdXNlci5jb20ifQ.RN6mwOxJZCBsZs5H2hm1KZK61z5VhddE8UvdIq8e0-hG9KFpBagzEYauf4Jpynpf63MQ-qQlU_YC8Fk4wfOqWMGPbQnbE62MXE6bLUCIaersDie69GYuenYHsc9npgDeo9Lz8mHohOiSzr4cw0OKOirrP-dELKDNDQJr14RzxBMEP-se8YvKRWpDGySc1VXGfIl1Si-NF6L7MeEso40wYQMkxsadWMDFzMudaBYU0uAjHsTArNWEikZSBZOj63bOH9cLgHXWbTISnS74R2pnQK1rIF1j6yiAsEFxS-QbqNbuADjwLp00A2rsih4RYncpLsZXDo14CZvzlYlssKlvxQ

###
